<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.real.cyd.mapper.FinRecordedMapper" >
  <resultMap id="BaseResultMap" type="com.real.cyd.bean.FinRecorded" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="year" property="year" jdbcType="INTEGER" />
    <result column="month" property="month" jdbcType="INTEGER" />
    <result column="day" property="day" jdbcType="INTEGER" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="sourceId" property="sourceid" jdbcType="VARCHAR" />
    <result column="userId" property="userid" jdbcType="VARCHAR" />
    <result column="clientId" property="clientid" jdbcType="VARCHAR" />
    <result column="record" property="record" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="BaseResultMap2" type="com.real.cyd.bean.vo.FinRecordedVo" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="year" property="year" jdbcType="INTEGER" />
    <result column="month" property="month" jdbcType="INTEGER" />
    <result column="day" property="day" jdbcType="INTEGER" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="sourceId" property="sourceid" jdbcType="VARCHAR" />
    <result column="userId" property="userid" jdbcType="VARCHAR" />
    <result column="clientId" property="clientid" jdbcType="VARCHAR" />
    <result column="record" property="record" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.real.cyd.bean.FinRecorded" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, money, year, month, day, createTime, sourceId, userId, clientId, record
  </sql>
  <sql id="Blob_Column_List" >
    description
  </sql>


  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from fin_recorded
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="count" resultType="int">
     select count(*) from fin_recorded
  </select>
  <select id="queryList" resultMap="BaseResultMap2">
    SELECT r.*,c.phone,c.`name` clientName,u.`username` userName,s.`name` sourceName FROM fin_recorded r LEFT JOIN ld_client c ON  r.`clientId` = c.`id` LEFT JOIN sys_user u ON r.`userId` = u.`id` LEFT JOIN fin_source s ON r.`sourceId` = s.`id`
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from fin_recorded
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.real.cyd.bean.FinRecorded" >
    insert into fin_recorded (id, money, year, 
      month, day, createTime, 
      sourceId, userId, clientId, 
      record, description)
    values (#{id,jdbcType=VARCHAR}, #{money,jdbcType=DECIMAL}, #{year,jdbcType=INTEGER}, 
      #{month,jdbcType=INTEGER}, #{day,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{sourceid,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{clientid,jdbcType=VARCHAR}, 
      #{record,jdbcType=INTEGER}, #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.real.cyd.bean.FinRecorded" >
    insert into fin_recorded
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="month != null" >
        month,
      </if>
      <if test="day != null" >
        day,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="sourceid != null" >
        sourceId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="clientid != null" >
        clientId,
      </if>
      <if test="record != null" >
        record,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="year != null" >
        #{year,jdbcType=INTEGER},
      </if>
      <if test="month != null" >
        #{month,jdbcType=INTEGER},
      </if>
      <if test="day != null" >
        #{day,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="sourceid != null" >
        #{sourceid,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="clientid != null" >
        #{clientid,jdbcType=VARCHAR},
      </if>
      <if test="record != null" >
        #{record,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByExampleSelective" parameterType="map" >
    update fin_recorded
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.year != null" >
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.month != null" >
        month = #{record.month,jdbcType=INTEGER},
      </if>
      <if test="record.day != null" >
        day = #{record.day,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sourceid != null" >
        sourceId = #{record.sourceid,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.clientid != null" >
        clientId = #{record.clientid,jdbcType=VARCHAR},
      </if>
      <if test="record.record != null" >
        record = #{record.record,jdbcType=INTEGER},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update fin_recorded
    set id = #{record.id,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DECIMAL},
      year = #{record.year,jdbcType=INTEGER},
      month = #{record.month,jdbcType=INTEGER},
      day = #{record.day,jdbcType=INTEGER},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      sourceId = #{record.sourceid,jdbcType=VARCHAR},
      userId = #{record.userid,jdbcType=VARCHAR},
      clientId = #{record.clientid,jdbcType=VARCHAR},
      record = #{record.record,jdbcType=INTEGER},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update fin_recorded
    set id = #{record.id,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DECIMAL},
      year = #{record.year,jdbcType=INTEGER},
      month = #{record.month,jdbcType=INTEGER},
      day = #{record.day,jdbcType=INTEGER},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      sourceId = #{record.sourceid,jdbcType=VARCHAR},
      userId = #{record.userid,jdbcType=VARCHAR},
      clientId = #{record.clientid,jdbcType=VARCHAR},
      record = #{record.record,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.real.cyd.bean.FinRecorded" >
    update fin_recorded
    <set >
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="year != null" >
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="month != null" >
        month = #{month,jdbcType=INTEGER},
      </if>
      <if test="day != null" >
        day = #{day,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="sourceid != null" >
        sourceId = #{sourceid,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="clientid != null" >
        clientId = #{clientid,jdbcType=VARCHAR},
      </if>
      <if test="record != null" >
        record = #{record,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.real.cyd.bean.FinRecorded" >
    update fin_recorded
    set money = #{money,jdbcType=DECIMAL},
      year = #{year,jdbcType=INTEGER},
      month = #{month,jdbcType=INTEGER},
      day = #{day,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      sourceId = #{sourceid,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=VARCHAR},
      clientId = #{clientid,jdbcType=VARCHAR},
      record = #{record,jdbcType=INTEGER},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.real.cyd.bean.FinRecorded" >
    update fin_recorded
    set money = #{money,jdbcType=DECIMAL},
      year = #{year,jdbcType=INTEGER},
      month = #{month,jdbcType=INTEGER},
      day = #{day,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      sourceId = #{sourceid,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=VARCHAR},
      clientId = #{clientid,jdbcType=VARCHAR},
      record = #{record,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>