<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.real.cyd.mapper.SysRoleMapper" >
  <resultMap id="BaseResultMap" type="com.real.cyd.bean.SysRole" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="roleName" property="roleName" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <resultMap id="BaseResultMap2" type="com.real.cyd.bean.SysPermission" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="resource_type" property="resourceType" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="permission" property="permission" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="available" property="available" jdbcType="BIT" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, roleName, createTime
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where id = #{id,jdbcType=VARCHAR}
  </select>
    <select id="getRoleList" resultType="com.real.cyd.bean.SysRole" parameterType="com.real.cyd.bean.SysUser">
      SELECT r.* FROM sys_role r,sys_user u,`sys_userrole` ur WHERE r.id = ur.role_id AND u.id = ur.user_id and u.username = #{username}
    </select>
  <select id="getRoleById" resultType="com.real.cyd.bean.SysRole" parameterType="com.real.cyd.bean.SysUser">
    SELECT r.* FROM sys_role r,sys_user u,`sys_userrole` ur WHERE r.id = ur.role_id AND u.id = ur.user_id and u.id = #{id}
  </select>
  <select id="roleList" resultType="com.real.cyd.bean.SysRole" parameterType="com.real.cyd.req.QueryRoleReq">
    select * from sys_role
    <where>
      <if test="id != null and id != ''">
        AND id = #{id}
      </if>
      <if test="roleName != null and roleName != ''">
        AND roleName = #{roleName}
      </if>
      <if test="startTime != null and startTime != ''">
        AND CREATEtime  &gt;= #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
        AND CREATEtime  &lt;= #{endTime}
      </if>
    </where>
  </select>

  <select id="selectPermissionParent" resultMap="BaseResultMap2">
    select * from sys_permission where parent_id is NULL and available = 1 ORDER by sort asc
  </select>
  <select id="getCount" resultType="int" parameterType="com.real.cyd.req.QueryRoleReq">

    select count(*) from sys_role
    <where>
      <if test="id != null and id != ''">
        AND id = #{id}
      </if>
      <if test="roleName != null and roleName != ''">
        AND roleName = #{roleName}
      </if>
      <if test="startTime != null and startTime != ''">
        AND CREATEtime  &gt;= #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
        AND CREATEtime  &lt;= #{endTime}
      </if>
    </where>
  </select>
  <select id="selectPermissionChildren" resultType="com.real.cyd.bean.SysPermission"
          parameterType="com.real.cyd.bean.SysPermission">
    SELECT * FROM sys_permission WHERE parent_id = #{id} AND available = 1 ORDER BY sort ASC
  </select>
  <select id="selectThisPermissonAuth" resultType="int" parameterType="Map">
    SELECT COUNT(*) FROM sys_role r,sys_permission p,sys_permissionrole pr WHERE r.id= pr.role_Id AND p.id= pr.permission_Id AND r.id = #{roleId} AND p.id = #{permissionId}
  </select>
  <delete id="deleteAuthByRoleId" parameterType="com.real.cyd.req.AuthPermissionReq">
    delete from sys_permissionrole where role_Id = #{roleId}
  </delete>
  <select id="authPer" parameterType="Map">
    insert into sys_permissionrole
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleId != null" >
        role_Id,
      </if>
      <if test="permissionId != null" >
        permission_Id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="permissionId != null" >
        #{permissionId,jdbcType=VARCHAR},
      </if>
    </trim>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sys_role
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.real.cyd.bean.SysRole" >
    insert into sys_role (id, roleName, createTime
      )
    values (#{id,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.real.cyd.bean.SysRole" >
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleName != null" >
        roleName,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByExampleSelective" parameterType="map" >
    update sys_role
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.roleName != null" >
        roleName = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_role
    set id = #{record.id,jdbcType=VARCHAR},
      roleName = #{record.roleName,jdbcType=VARCHAR},
      createTime = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.real.cyd.bean.SysRole" >
    update sys_role
    <set >
      <if test="roleName != null" >
        roleName = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.real.cyd.bean.SysRole" >
    update sys_role
    set roleName = #{roleName,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="getRole" resultMap="BaseResultMap">
    select * from sys_role
  </select>
</mapper>